/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#pragma once

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.anhquan.douki.Authentication */

#define DOUKI_TYPE_AUTHENTICATION (douki_authentication_get_type ())
#define DOUKI_AUTHENTICATION(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), DOUKI_TYPE_AUTHENTICATION, DoukiAuthentication))
#define DOUKI_IS_AUTHENTICATION(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), DOUKI_TYPE_AUTHENTICATION))
#define DOUKI_AUTHENTICATION_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), DOUKI_TYPE_AUTHENTICATION, DoukiAuthenticationIface))

struct _DoukiAuthentication;
typedef struct _DoukiAuthentication DoukiAuthentication;
typedef struct _DoukiAuthenticationIface DoukiAuthenticationIface;

struct _DoukiAuthenticationIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_create_secret) (
    DoukiAuthentication *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get_id) (
    DoukiAuthentication *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get_secret) (
    DoukiAuthentication *object,
    GDBusMethodInvocation *invocation);

};

GType douki_authentication_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *douki_authentication_interface_info (void);
guint douki_authentication_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void douki_authentication_complete_get_id (
    DoukiAuthentication *object,
    GDBusMethodInvocation *invocation,
    const gchar *id);

void douki_authentication_complete_get_secret (
    DoukiAuthentication *object,
    GDBusMethodInvocation *invocation,
    const gchar *password);

void douki_authentication_complete_create_secret (
    DoukiAuthentication *object,
    GDBusMethodInvocation *invocation,
    gboolean result);



/* D-Bus method calls: */
void douki_authentication_call_get_id (
    DoukiAuthentication *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean douki_authentication_call_get_id_finish (
    DoukiAuthentication *proxy,
    gchar **out_id,
    GAsyncResult *res,
    GError **error);

gboolean douki_authentication_call_get_id_sync (
    DoukiAuthentication *proxy,
    gchar **out_id,
    GCancellable *cancellable,
    GError **error);

void douki_authentication_call_get_secret (
    DoukiAuthentication *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean douki_authentication_call_get_secret_finish (
    DoukiAuthentication *proxy,
    gchar **out_password,
    GAsyncResult *res,
    GError **error);

gboolean douki_authentication_call_get_secret_sync (
    DoukiAuthentication *proxy,
    gchar **out_password,
    GCancellable *cancellable,
    GError **error);

void douki_authentication_call_create_secret (
    DoukiAuthentication *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean douki_authentication_call_create_secret_finish (
    DoukiAuthentication *proxy,
    gboolean *out_result,
    GAsyncResult *res,
    GError **error);

gboolean douki_authentication_call_create_secret_sync (
    DoukiAuthentication *proxy,
    gboolean *out_result,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define DOUKI_TYPE_AUTHENTICATION_PROXY (douki_authentication_proxy_get_type ())
#define DOUKI_AUTHENTICATION_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), DOUKI_TYPE_AUTHENTICATION_PROXY, DoukiAuthenticationProxy))
#define DOUKI_AUTHENTICATION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), DOUKI_TYPE_AUTHENTICATION_PROXY, DoukiAuthenticationProxyClass))
#define DOUKI_AUTHENTICATION_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), DOUKI_TYPE_AUTHENTICATION_PROXY, DoukiAuthenticationProxyClass))
#define DOUKI_IS_AUTHENTICATION_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), DOUKI_TYPE_AUTHENTICATION_PROXY))
#define DOUKI_IS_AUTHENTICATION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), DOUKI_TYPE_AUTHENTICATION_PROXY))

typedef struct _DoukiAuthenticationProxy DoukiAuthenticationProxy;
typedef struct _DoukiAuthenticationProxyClass DoukiAuthenticationProxyClass;
typedef struct _DoukiAuthenticationProxyPrivate DoukiAuthenticationProxyPrivate;

struct _DoukiAuthenticationProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  DoukiAuthenticationProxyPrivate *priv;
};

struct _DoukiAuthenticationProxyClass
{
  GDBusProxyClass parent_class;
};

GType douki_authentication_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DoukiAuthenticationProxy, g_object_unref)
#endif

void douki_authentication_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
DoukiAuthentication *douki_authentication_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
DoukiAuthentication *douki_authentication_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void douki_authentication_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
DoukiAuthentication *douki_authentication_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
DoukiAuthentication *douki_authentication_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define DOUKI_TYPE_AUTHENTICATION_SKELETON (douki_authentication_skeleton_get_type ())
#define DOUKI_AUTHENTICATION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), DOUKI_TYPE_AUTHENTICATION_SKELETON, DoukiAuthenticationSkeleton))
#define DOUKI_AUTHENTICATION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), DOUKI_TYPE_AUTHENTICATION_SKELETON, DoukiAuthenticationSkeletonClass))
#define DOUKI_AUTHENTICATION_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), DOUKI_TYPE_AUTHENTICATION_SKELETON, DoukiAuthenticationSkeletonClass))
#define DOUKI_IS_AUTHENTICATION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), DOUKI_TYPE_AUTHENTICATION_SKELETON))
#define DOUKI_IS_AUTHENTICATION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), DOUKI_TYPE_AUTHENTICATION_SKELETON))

typedef struct _DoukiAuthenticationSkeleton DoukiAuthenticationSkeleton;
typedef struct _DoukiAuthenticationSkeletonClass DoukiAuthenticationSkeletonClass;
typedef struct _DoukiAuthenticationSkeletonPrivate DoukiAuthenticationSkeletonPrivate;

struct _DoukiAuthenticationSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  DoukiAuthenticationSkeletonPrivate *priv;
};

struct _DoukiAuthenticationSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType douki_authentication_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DoukiAuthenticationSkeleton, g_object_unref)
#endif

DoukiAuthentication *douki_authentication_skeleton_new (void);


G_END_DECLS
